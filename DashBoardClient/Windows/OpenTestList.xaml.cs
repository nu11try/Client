using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace DashBoardClient
{
    /// <summary>
    /// Логика взаимодействия для Window2.xaml
    /// </summary>
    /// 
    public class Tests
    {
        public bool Select { get; set; }
        // ID-шник теста
        public string ID { get; set; }
        // Первончальное имя теста
        public string NewName { get; set; }
        // Ответственный за выполнение
        public string Executor { get; set; }
        // Время выполнения
        public string Time { get; set; }
        // Результат
        public string Result { get; set; }
        public string ResultExec { get; set; }
        public string TimeExec { get; set; }
    }

    public partial class OpenTestList : Window
    {
        List<Tests> list;
        string response = "";
        string[] testsList;
        readonly ServerConnect server = new ServerConnect();

        public OpenTestList(string ID)
        {            
            InitializeComponent();

            Data.TestsSelectedForStart = "sss";
            list = new List<Tests>();
            try
            {
                Message mess = new Message();
                mess.Add(ID);
                response = server.SendMsg("GetTestsThisPack", Data.ServiceSel, JsonConvert.SerializeObject(mess));
                mess = JsonConvert.DeserializeObject<Message>(response);

                for (var i = 0; i < mess.args.Count; i+=8)
                {
                    Tests test = new Tests();
                    test.ID = mess.args[i];
                    test.NewName = mess.args[i + 1];
                    test.TimeExec = mess.args[i + 6];
                    test.ResultExec = mess.args[i + 7];

                    list.Add(test);

                }
            }
            catch { MessageBox.Show("Произошла ошибка! Обратитесь к поддержке!"); }

            DataContext = this;
            TestsList.ItemsSource = list;
        }

        private void ShowResult(object sender, RoutedEventArgs e)
        {
            System.Diagnostics.Process.Start("file://pur-test01/ATST/" + Data.ServiceSel.ToUpper() + "/Tests/" + (sender as Button).Tag.ToString() + "/Res1/Report/run_results.html");
        }
    }
}
